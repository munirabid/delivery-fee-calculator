{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\Wolt\\\\Frontend-Task\\\\calculator\\\\src\\\\Calculator\\\\deliveryFeeCalculator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { WoltSurcharge, Currency, Distance } from '../Utils/StaticData';\nimport { isFloat } from '../Utils/Helpers';\nimport { calculateSurchargeOnCartValue, calculateSurchargeOnDistance, calculateSurchargeOnItems, calculateSurchargeOnRushHours, calculateTotalDeliveryCharges } from '../BusinessLogic/deliveryFeeCalculator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [deliveryFee, setdeliveryFee] = useState('0');\n  const [cartValue, setCartValue] = useState(0);\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\n  const [amoutOfItems, setAmountOfItems] = useState(0);\n  const [orderTime, setOrderTime] = useState('');\n  const {\n    FreeDeliveryCartValue,\n    MinumumFreeCartValue,\n    MaximumSurchargeFreeDistanceCovered,\n    MaximumSurchargeFreeItems,\n    SurchargeOnExtraItem,\n    RushHoursDay,\n    RushHoursStartTime,\n    RushHoursEndTime,\n    SurchargeOnRushHours,\n    MaximumDeliveryFee\n  } = WoltSurcharge;\n\n  const calculatePrice = e => {\n    if (cartValue >= FreeDeliveryCartValue) {\n      setdeliveryFee('0');\n      return;\n    } //check for cart vlaue\n\n\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(MinumumFreeCartValue, cartValue); // if(cartValue < 10){\n    //     surchargeOnCartValue = 10 - cartValue;\n    // };\n    //check for distance\n    // var distanceInRounds = deliveryDistance % 500;\n    // var baseDistance = deliveryDistance / 500;\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\n    // if(distanceInRounds > 0){\n    //     surchargeOnDistance = surchargeOnDistance + 1;\n    // }\n\n    let surchargeOnDistance = calculateSurchargeOnDistance(MaximumSurchargeFreeDistanceCovered, deliveryDistance); //check for number of items\n\n    var surchargeOnItems = calculateSurchargeOnItems(MaximumSurchargeFreeItems, SurchargeOnExtraItem, amoutOfItems); // if(amoutOfItems > 4){\n    //     var surchargebleItems = amoutOfItems - 4;\n    //     var surchargePerItem = 0.50;\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\n    // }\n    //check for datetime\n    // var surchargeOnRushHours = 0;\n    // var dateTime = new Date(orderTime);\n    // const deliveryDay = dateTime.getUTCDay();\n    // const deliveryTime = dateTime.getHours();\n\n    var deliverySum = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems; // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\n    // {\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\n    // }\n\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(RushHoursDay, RushHoursStartTime, RushHoursEndTime, SurchargeOnRushHours, orderTime, deliverySum); // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\n    // console.log(totalDeliveryFee);\n    // if(totalDeliveryFee > 15){\n    //     totalDeliveryFee = 15;\n    // }\n    //total Delivery Fee\n\n    let totalDeliveryFee = calculateTotalDeliveryCharges(MaximumDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours);\n    setdeliveryFee(isFloat(totalDeliveryFee) ? totalDeliveryFee.toFixed(2) : totalDeliveryFee.toString());\n  };\n\n  const setValue = (e, setState) => {\n    setState(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-4 offset-lg-4 offset-md-4 calborder\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cal-heading\",\n          children: \"Delivery Fee Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Cart Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                step: \"0.1\",\n                min: \"0\",\n                value: cartValue,\n                onChange: event => setValue(event, setCartValue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-2 col-form-label cal-label\",\n              children: Currency.Euro\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Delivery Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                min: \"0\",\n                value: deliveryDistance,\n                onChange: event => setValue(event, setDeliveryDistance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-2 col-form-label cal-label\",\n              children: Distance.Meters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Amount of Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                min: \"0\",\n                value: amoutOfItems,\n                onChange: event => setValue(event, setAmountOfItems)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"datetime-local\",\n                value: orderTime,\n                onChange: event => setValue(event, setOrderTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"col-sm-6 offset-sm-4 btn-primary btn-round\",\n              onClick: calculatePrice,\n              children: \"Calculate Delivery Price \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Delivery Price: \", deliveryFee, Currency.Euro]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Calculator, \"n2f0HFW12jq0TPqoA1G+MFt2rY0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Muneer/Wolt/Frontend-Task/calculator/src/Calculator/deliveryFeeCalculator.tsx"],"names":["React","useState","WoltSurcharge","Currency","Distance","isFloat","calculateSurchargeOnCartValue","calculateSurchargeOnDistance","calculateSurchargeOnItems","calculateSurchargeOnRushHours","calculateTotalDeliveryCharges","Calculator","deliveryFee","setdeliveryFee","cartValue","setCartValue","deliveryDistance","setDeliveryDistance","amoutOfItems","setAmountOfItems","orderTime","setOrderTime","FreeDeliveryCartValue","MinumumFreeCartValue","MaximumSurchargeFreeDistanceCovered","MaximumSurchargeFreeItems","SurchargeOnExtraItem","RushHoursDay","RushHoursStartTime","RushHoursEndTime","SurchargeOnRushHours","MaximumDeliveryFee","calculatePrice","e","surchargeOnCartValue","surchargeOnDistance","surchargeOnItems","deliverySum","surchargeOnRushHours","totalDeliveryFee","toFixed","toString","setValue","setState","target","value","event","Euro","Meters"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {WoltSurcharge, Currency, Distance} from '../Utils/StaticData';\r\nimport { isFloat } from '../Utils/Helpers';\r\n\r\nimport {calculateSurchargeOnCartValue, calculateSurchargeOnDistance, calculateSurchargeOnItems\r\n        , calculateSurchargeOnRushHours, calculateTotalDeliveryCharges} from '../BusinessLogic/deliveryFeeCalculator';\r\n\r\nconst Calculator : React.FC = ()=>\r\n { \r\n  const [deliveryFee, setdeliveryFee] = useState('0');\r\n  const [cartValue, setCartValue] = useState(0);\r\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\r\n  const [amoutOfItems, setAmountOfItems] = useState(0);\r\n  const [orderTime, setOrderTime] = useState('');\r\n\r\n  const {FreeDeliveryCartValue, MinumumFreeCartValue, MaximumSurchargeFreeDistanceCovered\r\n    , MaximumSurchargeFreeItems, SurchargeOnExtraItem, RushHoursDay, RushHoursStartTime, RushHoursEndTime\r\n    , SurchargeOnRushHours, MaximumDeliveryFee} = WoltSurcharge;\r\n\r\n  const calculatePrice = (e : React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n    if(cartValue >= FreeDeliveryCartValue){\r\n      setdeliveryFee('0');\r\n        return;\r\n    }\r\n\r\n    //check for cart vlaue\r\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(MinumumFreeCartValue, cartValue);\r\n    \r\n    // if(cartValue < 10){\r\n    //     surchargeOnCartValue = 10 - cartValue;\r\n    // };\r\n\r\n    //check for distance\r\n    // var distanceInRounds = deliveryDistance % 500;\r\n    // var baseDistance = deliveryDistance / 500;\r\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\r\n    // if(distanceInRounds > 0){\r\n    //     surchargeOnDistance = surchargeOnDistance + 1;\r\n    // }\r\n\r\n    let surchargeOnDistance = calculateSurchargeOnDistance(MaximumSurchargeFreeDistanceCovered, deliveryDistance);\r\n\r\n    //check for number of items\r\n    var surchargeOnItems = calculateSurchargeOnItems(MaximumSurchargeFreeItems, SurchargeOnExtraItem, amoutOfItems);\r\n\r\n    // if(amoutOfItems > 4){\r\n    //     var surchargebleItems = amoutOfItems - 4;\r\n    //     var surchargePerItem = 0.50;\r\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\r\n    // }\r\n\r\n    //check for datetime\r\n    // var surchargeOnRushHours = 0;\r\n    // var dateTime = new Date(orderTime);\r\n    // const deliveryDay = dateTime.getUTCDay();\r\n    // const deliveryTime = dateTime.getHours();\r\n\r\n    var deliverySum = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems;\r\n\r\n    // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\r\n    // {\r\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\r\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\r\n    // }\r\n\r\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(RushHoursDay,RushHoursStartTime,RushHoursEndTime,SurchargeOnRushHours,orderTime,deliverySum);\r\n\r\n    // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\r\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\r\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\r\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\r\n    // console.log(totalDeliveryFee);\r\n    // if(totalDeliveryFee > 15){\r\n    //     totalDeliveryFee = 15;\r\n    // }\r\n\r\n    //total Delivery Fee\r\n    let totalDeliveryFee = calculateTotalDeliveryCharges(MaximumDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours);\r\n    setdeliveryFee(isFloat(totalDeliveryFee) ?  totalDeliveryFee.toFixed(2) : totalDeliveryFee.toString());\r\n  }\r\n\r\n    const setValue = (e:any, setState: any)=>{\r\n        setState(e.target.value);\r\n    }\r\n\r\n     return (\r\n        <>\r\n        <div>\r\n            <div className='col-sm-4 offset-lg-4 offset-md-4 calborder'>\r\n                <p className='cal-heading'>Delivery Fee Calculator</p>\r\n\r\n                <div className='calculator'>\r\n                  <div className='row mb-2'>\r\n                      <label className=\"col-sm-5 col-form-label\">Cart Value</label>\r\n                      <div className=\"col-sm-5\">\r\n                        <input className=\"form-control\"  type=\"number\" step=\"0.1\" min='0' value={cartValue} onChange={(event) => setValue(event, setCartValue)}/>\r\n                      </div>\r\n                      <label className=\"col-sm-2 col-form-label cal-label\">{Currency.Euro}</label>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Delivery Distance</label>\r\n                    <div className=\"col-sm-5\">\r\n                        <input className=\"form-control\"  type=\"number\" min='0' value={deliveryDistance} onChange={(event) => setValue(event, setDeliveryDistance)}/>\r\n                    </div>\r\n                    <label className=\"col-sm-2 col-form-label cal-label\">{Distance.Meters}</label>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Amount of Items</label>\r\n                    <div className=\"col-sm-5\">\r\n                      <input className=\"form-control\" type=\"number\" min='0' value={amoutOfItems} onChange={(event) => setValue(event, setAmountOfItems)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Time</label>\r\n                    <div className=\"col-sm-5\">\r\n                      <input className=\"form-control\"  type=\"datetime-local\" value={orderTime} onChange={(event) => setValue(event, setOrderTime)}/>                          \r\n                    </div>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <button className=\"col-sm-6 offset-sm-4 btn-primary btn-round\"  onClick={calculatePrice}>Calculate Delivery Price </button>\r\n                  </div>\r\n                  <div className='row'> \r\n                    <p>Delivery Price: {deliveryFee}{Currency.Euro}</p>\r\n                  </div>\r\n                </div>\r\n                <p ></p>         \r\n            </div>\r\n        </div>\r\n                             \r\n        </>\r\n        )\r\n };\r\n\r\nexport default Calculator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}