{"ast":null,"code":"export const calculateSurchargeOnCartValue = (minCartValue, cartValue) => {\n  console.log(\"Cart value: \", cartValuetoFixed(2));\n  let surchargeOnCartValue = 0;\n\n  if (cartValue < 10) {\n    surchargeOnCartValue = minCartValue - cartValue;\n  }\n\n  ;\n  console.log(\"surchargeOnCartValue: \", surchargeOnCartValue);\n  return surchargeOnCartValue;\n};\nexport const calculaeSurchargeOnDistance = (minDistance, deliveryDistance) => {\n  console.log(\"deliveryDistance:\", deliveryDistance);\n  let distanceInRounds = deliveryDistance % minDistance;\n  let baseDistance = deliveryDistance / minDistance;\n  let surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\n\n  if (distanceInRounds > 0) {\n    surchargeOnDistance = surchargeOnDistance + 1;\n  }\n\n  console.log(\"surchargeOnDistance:\", surchargeOnDistance);\n  return surchargeOnDistance;\n};\nexport const calculateSurchargeOnItems = (minItems, surchargePerItem, amoutOfItems) => {\n  console.log(\"amoutOfItems\", amoutOfItems);\n  let surchargeOnItems = 0;\n\n  if (amoutOfItems > 4) {\n    let surchargebleItems = amoutOfItems - minItems;\n    surchargeOnItems = surchargebleItems * surchargePerItem;\n  }\n\n  console.log(\"surchargeOnItems\", surchargeOnItems);\n  return surchargeOnItems;\n};\nexport const calculateSurchargeOnRushHours = (rushHoursDay, rushHoursStartTime, rushHoursEndTime, feeOnRushHours, orderTime, deliveryFee) => {\n  console.log(\"orderTime\", orderTime);\n  let surchargeOnRushHours = 0;\n  const deliveryDateTime = new Date(orderTime);\n  const deliveryDay = deliveryDateTime.getUTCDay();\n  const deliveryTime = deliveryDateTime.getHours();\n\n  if (deliveryDay === rushHoursDay && deliveryTime >= rushHoursStartTime && deliveryTime <= rushHoursEndTime) {\n    if (deliveryFee === 0) {\n      return surchargeOnRushHours = 1.1;\n    }\n\n    surchargeOnRushHours = deliveryFee * feeOnRushHours - deliveryFee;\n  }\n\n  console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\n  return surchargeOnRushHours;\n};\nexport const calculateTotalDeliveryCharges = (maxDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours) => {\n  let totalDeliveryFee = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems + surchargeOnRushHours;\n\n  if (totalDeliveryFee > maxDeliveryFee) {\n    totalDeliveryFee = maxDeliveryFee;\n  }\n\n  return totalDeliveryFee;\n};","map":{"version":3,"sources":["C:/Muneer/Wolt/Frontend-Task/calculator/src/BusinessLogic/calculator.ts"],"names":["calculateSurchargeOnCartValue","minCartValue","cartValue","console","log","cartValuetoFixed","surchargeOnCartValue","calculaeSurchargeOnDistance","minDistance","deliveryDistance","distanceInRounds","baseDistance","surchargeOnDistance","parseInt","toString","split","calculateSurchargeOnItems","minItems","surchargePerItem","amoutOfItems","surchargeOnItems","surchargebleItems","calculateSurchargeOnRushHours","rushHoursDay","rushHoursStartTime","rushHoursEndTime","feeOnRushHours","orderTime","deliveryFee","surchargeOnRushHours","deliveryDateTime","Date","deliveryDay","getUTCDay","deliveryTime","getHours","calculateTotalDeliveryCharges","maxDeliveryFee","totalDeliveryFee"],"mappings":"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","sourcesContent":["\r\nexport const calculateSurchargeOnCartValue = (minCartValue: number, cartValue:number)=> {\r\n    console.log(\"Cart value: \", cartValuetoFixed(2));\r\n    let surchargeOnCartValue = 0;\r\n    if(cartValue < 10){\r\n        surchargeOnCartValue = minCartValue - cartValue;\r\n    };\r\n\r\n    console.log(\"surchargeOnCartValue: \", surchargeOnCartValue);\r\n    \r\n    return surchargeOnCartValue;\r\n}\r\n\r\nexport const calculaeSurchargeOnDistance = (minDistance: number, deliveryDistance:number)=>{\r\n    console.log(\"deliveryDistance:\", deliveryDistance);\r\n    let distanceInRounds = deliveryDistance % minDistance;\r\n    let baseDistance = deliveryDistance / minDistance;\r\n    let surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\r\n    if(distanceInRounds > 0){\r\n        surchargeOnDistance = surchargeOnDistance + 1;\r\n    }\r\n    console.log(\"surchargeOnDistance:\", surchargeOnDistance);\r\n    return surchargeOnDistance;\r\n}\r\n\r\nexport const calculateSurchargeOnItems = (minItems:number, surchargePerItem:number, amoutOfItems: number)=>{\r\n    console.log(\"amoutOfItems\", amoutOfItems);\r\n    let surchargeOnItems = 0;\r\n    if(amoutOfItems > 4){\r\n        let surchargebleItems = amoutOfItems - minItems;\r\n        surchargeOnItems = surchargebleItems * surchargePerItem;\r\n    }\r\n    console.log(\"surchargeOnItems\", surchargeOnItems);\r\n    return surchargeOnItems;\r\n}\r\n\r\nexport const calculateSurchargeOnRushHours = (rushHoursDay:number, rushHoursStartTime:number, rushHoursEndTime:number, feeOnRushHours:number, orderTime:string, deliveryFee:number)=>{\r\n    console.log(\"orderTime\", orderTime);\r\n\r\n    let surchargeOnRushHours = 0;\r\n    const deliveryDateTime = new Date(orderTime);\r\n    const deliveryDay = deliveryDateTime.getUTCDay();\r\n    const deliveryTime = deliveryDateTime.getHours();\r\n\r\n    if(deliveryDay === rushHoursDay && (deliveryTime>= rushHoursStartTime && deliveryTime <= rushHoursEndTime))\r\n    {\r\n        if(deliveryFee === 0)\r\n        {\r\n            return surchargeOnRushHours = 1.1;\r\n        }\r\n        surchargeOnRushHours = (deliveryFee * feeOnRushHours) - deliveryFee;\r\n    }\r\n\r\n    console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\r\n\r\n    return surchargeOnRushHours;\r\n}\r\n\r\nexport const calculateTotalDeliveryCharges = (maxDeliveryFee:number, surchargeOnCartValue: number, surchargeOnDistance: number,surchargeOnItems: number,surchargeOnRushHours: number,)=>{\r\n    \r\n    let totalDeliveryFee = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems + surchargeOnRushHours;\r\n\r\n    if(totalDeliveryFee > maxDeliveryFee) {\r\n        totalDeliveryFee = maxDeliveryFee;\r\n    }\r\n    \r\n    return totalDeliveryFee;\r\n}"]},"metadata":{},"sourceType":"module"}