{"ast":null,"code":"export const calculateSurchargeOnCartValue = (minCartValue, cartValue) => {\n  let surchargeOnCartValue = 0;\n\n  if (cartValue < 10) {\n    surchargeOnCartValue = 10 - cartValue;\n  }\n\n  ;\n  return surchargeOnCartValue;\n};\nexport const calculaeSurchargeOnDistance = (minDistance, deliveryDistance) => {\n  let distanceInRounds = deliveryDistance % minDistance;\n  let baseDistance = deliveryDistance / minDistance;\n  let surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\n\n  if (distanceInRounds > 0) {\n    surchargeOnDistance = surchargeOnDistance + 1;\n  }\n\n  return surchargeOnDistance;\n};\nexport const calculateSurchargeOnItems = (minItems, surchargePerItem, amoutOfItems) => {\n  let surchargeOnItems = 0;\n\n  if (amoutOfItems > 4) {\n    let surchargebleItems = amoutOfItems - minItems;\n    surchargeOnItems = surchargebleItems * surchargePerItem;\n  }\n\n  return surchargeOnItems;\n};\nexport const calculateSurchargeOnRushHours = (rushHoursDay, rushHoursStartTime, rushHoursEndTime, feeOnRushHours, orderTime, deliveryFee) => {\n  let surchargeOnRushHours = 0;\n  const deliveryDateTime = new Date(orderTime);\n  const deliveryDay = deliveryDateTime.getUTCDay();\n  const deliveryTime = deliveryDateTime.getHours();\n\n  if (deliveryDay === rushHoursDay && deliveryTime >= rushHoursStartTime && deliveryTime <= rushHoursEndTime) {\n    if (deliveryFee === 0) {\n      return surchargeOnRushHours = 1.1;\n    }\n\n    surchargeOnRushHours = deliveryFee * feeOnRushHours - deliveryFee;\n  }\n\n  return surchargeOnRushHours;\n};\nexport const calculateTotalDeliveryCharges = (surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours) => {\n  let total;\n};","map":{"version":3,"sources":["C:/Muneer/Wolt/Frontend-Task/calculator/src/BusinessLogic/calculator.ts"],"names":["calculateSurchargeOnCartValue","minCartValue","cartValue","surchargeOnCartValue","calculaeSurchargeOnDistance","minDistance","deliveryDistance","distanceInRounds","baseDistance","surchargeOnDistance","parseInt","toString","split","calculateSurchargeOnItems","minItems","surchargePerItem","amoutOfItems","surchargeOnItems","surchargebleItems","calculateSurchargeOnRushHours","rushHoursDay","rushHoursStartTime","rushHoursEndTime","feeOnRushHours","orderTime","deliveryFee","surchargeOnRushHours","deliveryDateTime","Date","deliveryDay","getUTCDay","deliveryTime","getHours","calculateTotalDeliveryCharges","total"],"mappings":"AACA,OAAO,MAAMA,6BAA6B,GAAG,CAACC,YAAD,EAAuBC,SAAvB,KAA2C;AAEpF,MAAIC,oBAAoB,GAAG,CAA3B;;AAEA,MAAGD,SAAS,GAAG,EAAf,EAAkB;AACdC,IAAAA,oBAAoB,GAAG,KAAKD,SAA5B;AACH;;AAAA;AAED,SAAOC,oBAAP;AACH,CATM;AAWP,OAAO,MAAMC,2BAA2B,GAAG,CAACC,WAAD,EAAsBC,gBAAtB,KAAgD;AACvF,MAAIC,gBAAgB,GAAGD,gBAAgB,GAAGD,WAA1C;AACA,MAAIG,YAAY,GAAGF,gBAAgB,GAAGD,WAAtC;AACA,MAAII,mBAAmB,GAAGC,QAAQ,CAACF,YAAY,CAACG,QAAb,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAD,CAAlC;;AACA,MAAGL,gBAAgB,GAAG,CAAtB,EAAwB;AACpBE,IAAAA,mBAAmB,GAAGA,mBAAmB,GAAG,CAA5C;AACH;;AAED,SAAOA,mBAAP;AACH,CATM;AAWP,OAAO,MAAMI,yBAAyB,GAAG,CAACC,QAAD,EAAkBC,gBAAlB,EAA2CC,YAA3C,KAAkE;AACvG,MAAIC,gBAAgB,GAAG,CAAvB;;AAEA,MAAGD,YAAY,GAAG,CAAlB,EAAoB;AAChB,QAAIE,iBAAiB,GAAGF,YAAY,GAAGF,QAAvC;AACAG,IAAAA,gBAAgB,GAAGC,iBAAiB,GAAGH,gBAAvC;AACH;;AAED,SAAOE,gBAAP;AACH,CATM;AAWP,OAAO,MAAME,6BAA6B,GAAG,CAACC,YAAD,EAAsBC,kBAAtB,EAAiDC,gBAAjD,EAA0EC,cAA1E,EAAiGC,SAAjG,EAAmHC,WAAnH,KAAwI;AACjL,MAAIC,oBAAoB,GAAG,CAA3B;AACA,QAAMC,gBAAgB,GAAG,IAAIC,IAAJ,CAASJ,SAAT,CAAzB;AACA,QAAMK,WAAW,GAAGF,gBAAgB,CAACG,SAAjB,EAApB;AACA,QAAMC,YAAY,GAAGJ,gBAAgB,CAACK,QAAjB,EAArB;;AAEA,MAAGH,WAAW,KAAKT,YAAhB,IAAiCW,YAAY,IAAGV,kBAAf,IAAqCU,YAAY,IAAIT,gBAAzF,EACA;AACI,QAAGG,WAAW,KAAK,CAAnB,EACA;AACI,aAAOC,oBAAoB,GAAG,GAA9B;AACH;;AACDA,IAAAA,oBAAoB,GAAID,WAAW,GAAGF,cAAf,GAAiCE,WAAxD;AACH;;AAED,SAAOC,oBAAP;AACH,CAhBM;AAkBP,OAAO,MAAMO,6BAA6B,GAAG,CAAC9B,oBAAD,EAA+BM,mBAA/B,EAA2DQ,gBAA3D,EAAoFS,oBAApF,KAAoH;AAC7J,MAAIQ,KAAJ;AACH,CAFM","sourcesContent":["\r\nexport const calculateSurchargeOnCartValue = (minCartValue: number, cartValue:number)=> {\r\n\r\n    let surchargeOnCartValue = 0;\r\n\r\n    if(cartValue < 10){\r\n        surchargeOnCartValue = 10 - cartValue;\r\n    };\r\n\r\n    return surchargeOnCartValue;\r\n}\r\n\r\nexport const calculaeSurchargeOnDistance = (minDistance: number, deliveryDistance:number)=>{\r\n    let distanceInRounds = deliveryDistance % minDistance;\r\n    let baseDistance = deliveryDistance / minDistance;\r\n    let surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\r\n    if(distanceInRounds > 0){\r\n        surchargeOnDistance = surchargeOnDistance + 1;\r\n    }\r\n\r\n    return surchargeOnDistance;\r\n}\r\n\r\nexport const calculateSurchargeOnItems = (minItems:number, surchargePerItem:number, amoutOfItems: number)=>{\r\n    let surchargeOnItems = 0;\r\n\r\n    if(amoutOfItems > 4){\r\n        let surchargebleItems = amoutOfItems - minItems;\r\n        surchargeOnItems = surchargebleItems * surchargePerItem;\r\n    }\r\n\r\n    return surchargeOnItems;\r\n}\r\n\r\nexport const calculateSurchargeOnRushHours = (rushHoursDay:number, rushHoursStartTime:number, rushHoursEndTime:number, feeOnRushHours:number, orderTime:string, deliveryFee:number)=>{\r\n    let surchargeOnRushHours = 0;\r\n    const deliveryDateTime = new Date(orderTime);\r\n    const deliveryDay = deliveryDateTime.getUTCDay();\r\n    const deliveryTime = deliveryDateTime.getHours();\r\n\r\n    if(deliveryDay === rushHoursDay && (deliveryTime>= rushHoursStartTime && deliveryTime <= rushHoursEndTime))\r\n    {\r\n        if(deliveryFee === 0)\r\n        {\r\n            return surchargeOnRushHours = 1.1;\r\n        }\r\n        surchargeOnRushHours = (deliveryFee * feeOnRushHours) - deliveryFee;\r\n    }\r\n\r\n    return surchargeOnRushHours;\r\n}\r\n\r\nexport const calculateTotalDeliveryCharges = (surchargeOnCartValue: number, surchargeOnDistance: number,surchargeOnItems: number,surchargeOnRushHours: number,)=>{\r\n    let total\r\n}"]},"metadata":{},"sourceType":"module"}