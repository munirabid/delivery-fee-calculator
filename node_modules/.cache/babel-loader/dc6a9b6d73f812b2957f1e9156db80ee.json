{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\Wolt\\\\Frontend-Task\\\\calculator\\\\src\\\\Calculator\\\\deliveryFeeCalculator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { WoltSurcharge } from '../Utils/StaticData';\nimport { isFloat } from '../Utils/Helpers';\nimport { calculateSurchargeOnCartValue, calculateSurchargeOnDistance, calculateSurchargeOnItems, calculateSurchargeOnRushHours, calculateTotalDeliveryCharges } from '../BusinessLogic/deliveryFeeCalculator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [deliveryFee, setdeliveryFee] = useState('0');\n  const [cartValue, setCartValue] = useState(0);\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\n  const [amoutOfItems, setAmountOfItems] = useState(0);\n  const [orderTime, setOrderTime] = useState('');\n  const {\n    FreeDeliveryCartValue,\n    MinumumFreeCartValue,\n    MaximumSurchargeFreeDistanceCovered,\n    MaximumSurchargeFreeItems,\n    SurchargeOnExtraItem,\n    RushHoursDay,\n    RushHoursStartTime,\n    RushHoursEndTime,\n    SurchargeOnRushHours,\n    MaximumDeliveryFee\n  } = WoltSurcharge;\n\n  const calculatePrice = e => {\n    if (cartValue >= FreeDeliveryCartValue) {\n      setdeliveryFee('0');\n      return;\n    } //check for cart vlaue\n\n\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(MinumumFreeCartValue, cartValue); // if(cartValue < 10){\n    //     surchargeOnCartValue = 10 - cartValue;\n    // };\n    //check for distance\n    // var distanceInRounds = deliveryDistance % 500;\n    // var baseDistance = deliveryDistance / 500;\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\n    // if(distanceInRounds > 0){\n    //     surchargeOnDistance = surchargeOnDistance + 1;\n    // }\n\n    let surchargeOnDistance = calculateSurchargeOnDistance(MaximumSurchargeFreeDistanceCovered, deliveryDistance); //check for number of items\n\n    var surchargeOnItems = calculateSurchargeOnItems(MaximumSurchargeFreeItems, SurchargeOnExtraItem, amoutOfItems); // if(amoutOfItems > 4){\n    //     var surchargebleItems = amoutOfItems - 4;\n    //     var surchargePerItem = 0.50;\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\n    // }\n    //check for datetime\n    // var surchargeOnRushHours = 0;\n    // var dateTime = new Date(orderTime);\n    // const deliveryDay = dateTime.getUTCDay();\n    // const deliveryTime = dateTime.getHours();\n\n    var deliverySum = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems; // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\n    // {\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\n    // }\n\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(RushHoursDay, RushHoursStartTime, RushHoursEndTime, SurchargeOnRushHours, orderTime, deliverySum); // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\n    // console.log(totalDeliveryFee);\n    // if(totalDeliveryFee > 15){\n    //     totalDeliveryFee = 15;\n    // }\n    //total Delivery Fee\n\n    let totalDeliveryFee = calculateTotalDeliveryCharges(MaximumDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours);\n    setdeliveryFee(isFloat(totalDeliveryFee) ? totalDeliveryFee.toFixed(2) : totalDeliveryFee.toString());\n  };\n\n  const setValue = (e, setState) => {\n    setState(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Calculator, \"n2f0HFW12jq0TPqoA1G+MFt2rY0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Muneer/Wolt/Frontend-Task/calculator/src/Calculator/deliveryFeeCalculator.tsx"],"names":["React","useState","WoltSurcharge","isFloat","calculateSurchargeOnCartValue","calculateSurchargeOnDistance","calculateSurchargeOnItems","calculateSurchargeOnRushHours","calculateTotalDeliveryCharges","Calculator","deliveryFee","setdeliveryFee","cartValue","setCartValue","deliveryDistance","setDeliveryDistance","amoutOfItems","setAmountOfItems","orderTime","setOrderTime","FreeDeliveryCartValue","MinumumFreeCartValue","MaximumSurchargeFreeDistanceCovered","MaximumSurchargeFreeItems","SurchargeOnExtraItem","RushHoursDay","RushHoursStartTime","RushHoursEndTime","SurchargeOnRushHours","MaximumDeliveryFee","calculatePrice","e","surchargeOnCartValue","surchargeOnDistance","surchargeOnItems","deliverySum","surchargeOnRushHours","totalDeliveryFee","toFixed","toString","setValue","setState","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,QAAgD,qBAAhD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAAQC,6BAAR,EAAuCC,4BAAvC,EAAqEC,yBAArE,EACUC,6BADV,EACyCC,6BADzC,QAC6E,wCAD7E;;;;AAGA,MAAMC,UAAqB,GAAG,MAC7B;AAAA;;AACC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACe,YAAD,EAAeC,gBAAf,IAAmChB,QAAQ,CAAC,CAAD,CAAjD;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM;AAACmB,IAAAA,qBAAD;AAAwBC,IAAAA,oBAAxB;AAA8CC,IAAAA,mCAA9C;AACFC,IAAAA,yBADE;AACyBC,IAAAA,oBADzB;AAC+CC,IAAAA,YAD/C;AAC6DC,IAAAA,kBAD7D;AACiFC,IAAAA,gBADjF;AAEFC,IAAAA,oBAFE;AAEoBC,IAAAA;AAFpB,MAE0C3B,aAFhD;;AAIA,QAAM4B,cAAc,GAAIC,CAAD,IAA6C;AAElE,QAAGnB,SAAS,IAAIQ,qBAAhB,EAAsC;AACpCT,MAAAA,cAAc,CAAC,GAAD,CAAd;AACE;AACH,KALiE,CAOlE;;;AACA,QAAIqB,oBAAoB,GAAG5B,6BAA6B,CAACiB,oBAAD,EAAuBT,SAAvB,CAAxD,CARkE,CAUlE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIqB,mBAAmB,GAAG5B,4BAA4B,CAACiB,mCAAD,EAAsCR,gBAAtC,CAAtD,CAtBkE,CAwBlE;;AACA,QAAIoB,gBAAgB,GAAG5B,yBAAyB,CAACiB,yBAAD,EAA4BC,oBAA5B,EAAkDR,YAAlD,CAAhD,CAzBkE,CA2BlE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAImB,WAAW,GAAGH,oBAAoB,GAAGC,mBAAvB,GAA6CC,gBAA/D,CAvCkE,CAyClE;AACA;AACA;AACA;AACA;;AAEA,QAAIE,oBAAoB,GAAG7B,6BAA6B,CAACkB,YAAD,EAAcC,kBAAd,EAAiCC,gBAAjC,EAAkDC,oBAAlD,EAAuEV,SAAvE,EAAiFiB,WAAjF,CAAxD,CA/CkE,CAiDlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAIE,gBAAgB,GAAG7B,6BAA6B,CAACqB,kBAAD,EAAqBG,oBAArB,EAA2CC,mBAA3C,EAAgEC,gBAAhE,EAAkFE,oBAAlF,CAApD;AACAzB,IAAAA,cAAc,CAACR,OAAO,CAACkC,gBAAD,CAAP,GAA6BA,gBAAgB,CAACC,OAAjB,CAAyB,CAAzB,CAA7B,GAA2DD,gBAAgB,CAACE,QAAjB,EAA5D,CAAd;AACD,GA7DD;;AA+DE,QAAMC,QAAQ,GAAG,CAACT,CAAD,EAAQU,QAAR,KAAwB;AACrCA,IAAAA,QAAQ,CAACV,CAAC,CAACW,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIC,sBACG;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA,mBADH;AAQH,CAvFF;;GAAMlC,U;;KAAAA,U;AAyFN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {WoltSurcharge, Currency, Distance} from '../Utils/StaticData';\r\nimport { isFloat } from '../Utils/Helpers';\r\n\r\nimport {calculateSurchargeOnCartValue, calculateSurchargeOnDistance, calculateSurchargeOnItems\r\n        , calculateSurchargeOnRushHours, calculateTotalDeliveryCharges} from '../BusinessLogic/deliveryFeeCalculator';\r\n\r\nconst Calculator : React.FC = ()=>\r\n { \r\n  const [deliveryFee, setdeliveryFee] = useState('0');\r\n  const [cartValue, setCartValue] = useState(0);\r\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\r\n  const [amoutOfItems, setAmountOfItems] = useState(0);\r\n  const [orderTime, setOrderTime] = useState('');\r\n\r\n  const {FreeDeliveryCartValue, MinumumFreeCartValue, MaximumSurchargeFreeDistanceCovered\r\n    , MaximumSurchargeFreeItems, SurchargeOnExtraItem, RushHoursDay, RushHoursStartTime, RushHoursEndTime\r\n    , SurchargeOnRushHours, MaximumDeliveryFee} = WoltSurcharge;\r\n\r\n  const calculatePrice = (e : React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n    if(cartValue >= FreeDeliveryCartValue){\r\n      setdeliveryFee('0');\r\n        return;\r\n    }\r\n\r\n    //check for cart vlaue\r\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(MinumumFreeCartValue, cartValue);\r\n    \r\n    // if(cartValue < 10){\r\n    //     surchargeOnCartValue = 10 - cartValue;\r\n    // };\r\n\r\n    //check for distance\r\n    // var distanceInRounds = deliveryDistance % 500;\r\n    // var baseDistance = deliveryDistance / 500;\r\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\r\n    // if(distanceInRounds > 0){\r\n    //     surchargeOnDistance = surchargeOnDistance + 1;\r\n    // }\r\n\r\n    let surchargeOnDistance = calculateSurchargeOnDistance(MaximumSurchargeFreeDistanceCovered, deliveryDistance);\r\n\r\n    //check for number of items\r\n    var surchargeOnItems = calculateSurchargeOnItems(MaximumSurchargeFreeItems, SurchargeOnExtraItem, amoutOfItems);\r\n\r\n    // if(amoutOfItems > 4){\r\n    //     var surchargebleItems = amoutOfItems - 4;\r\n    //     var surchargePerItem = 0.50;\r\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\r\n    // }\r\n\r\n    //check for datetime\r\n    // var surchargeOnRushHours = 0;\r\n    // var dateTime = new Date(orderTime);\r\n    // const deliveryDay = dateTime.getUTCDay();\r\n    // const deliveryTime = dateTime.getHours();\r\n\r\n    var deliverySum = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems;\r\n\r\n    // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\r\n    // {\r\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\r\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\r\n    // }\r\n\r\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(RushHoursDay,RushHoursStartTime,RushHoursEndTime,SurchargeOnRushHours,orderTime,deliverySum);\r\n\r\n    // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\r\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\r\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\r\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\r\n    // console.log(totalDeliveryFee);\r\n    // if(totalDeliveryFee > 15){\r\n    //     totalDeliveryFee = 15;\r\n    // }\r\n\r\n    //total Delivery Fee\r\n    let totalDeliveryFee = calculateTotalDeliveryCharges(MaximumDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours);\r\n    setdeliveryFee(isFloat(totalDeliveryFee) ?  totalDeliveryFee.toFixed(2) : totalDeliveryFee.toString());\r\n  }\r\n\r\n    const setValue = (e:any, setState: any)=>{\r\n        setState(e.target.value);\r\n    }\r\n\r\n     return (\r\n        <>\r\n        <div className='row'>\r\n\r\n        </div>\r\n                             \r\n        </>\r\n        )\r\n };\r\n\r\nexport default Calculator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}