{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\Wolt\\\\Frontend-Task\\\\calculator\\\\src\\\\Calculator\\\\deliveryFeeCalculator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { WoltSurcharge, Currency, Distance } from \"../Utils/StaticData\";\nimport { isFloat } from \"../Utils/Helpers\";\nimport { calculateSurchargeOnCartValue, calculateSurchargeOnDistance, calculateSurchargeOnItems, calculateSurchargeOnRushHours, calculateTotalDeliveryCharges } from \"../BusinessLogic/deliveryFeeCalculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst date = new Date().tois;\nconsole.log(date);\n\nconst Calculator = () => {\n  _s();\n\n  const [deliveryFee, setdeliveryFee] = useState(\"0\");\n  const [cartValue, setCartValue] = useState(0);\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\n  const [amoutOfItems, setAmountOfItems] = useState(0);\n  const [orderTime, setOrderTime] = useState(\"\");\n  const {\n    FreeDeliveryCartValue,\n    MinumumFreeCartValue,\n    MaximumSurchargeFreeDistanceCovered,\n    MaximumSurchargeFreeItems,\n    SurchargeOnExtraItem,\n    RushHoursDay,\n    RushHoursStartTime,\n    RushHoursEndTime,\n    SurchargeOnRushHours,\n    MaximumDeliveryFee\n  } = WoltSurcharge;\n\n  const calculatePrice = e => {\n    if (cartValue >= FreeDeliveryCartValue) {\n      setdeliveryFee(\"0\");\n      return;\n    } //check for cart vlaue\n\n\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(MinumumFreeCartValue, cartValue); // if(cartValue < 10){\n    //     surchargeOnCartValue = 10 - cartValue;\n    // };\n    //check for distance\n    // var distanceInRounds = deliveryDistance % 500;\n    // var baseDistance = deliveryDistance / 500;\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\n    // if(distanceInRounds > 0){\n    //     surchargeOnDistance = surchargeOnDistance + 1;\n    // }\n\n    let surchargeOnDistance = calculateSurchargeOnDistance(MaximumSurchargeFreeDistanceCovered, deliveryDistance); //check for number of items\n\n    var surchargeOnItems = calculateSurchargeOnItems(MaximumSurchargeFreeItems, SurchargeOnExtraItem, amoutOfItems); // if(amoutOfItems > 4){\n    //     var surchargebleItems = amoutOfItems - 4;\n    //     var surchargePerItem = 0.50;\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\n    // }\n    //check for datetime\n    // var surchargeOnRushHours = 0;\n    // var dateTime = new Date(orderTime);\n    // const deliveryDay = dateTime.getUTCDay();\n    // const deliveryTime = dateTime.getHours();\n\n    var deliverySum = surchargeOnCartValue + surchargeOnDistance + surchargeOnItems; // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\n    // {\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\n    // }\n\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(RushHoursDay, RushHoursStartTime, RushHoursEndTime, SurchargeOnRushHours, orderTime, deliverySum); // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\n    // console.log(totalDeliveryFee);\n    // if(totalDeliveryFee > 15){\n    //     totalDeliveryFee = 15;\n    // }\n    //total Delivery Fee\n\n    let totalDeliveryFee = calculateTotalDeliveryCharges(MaximumDeliveryFee, surchargeOnCartValue, surchargeOnDistance, surchargeOnItems, surchargeOnRushHours);\n    setdeliveryFee(isFloat(totalDeliveryFee) ? totalDeliveryFee.toFixed(2) : totalDeliveryFee.toString());\n  };\n\n  const setValue = (e, setState) => {\n    setState(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4 offset-lg-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Delivery Fee Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Cart Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                step: \"0.1\",\n                min: \"0\",\n                value: cartValue,\n                onChange: event => setValue(event, setCartValue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), Currency.Euro]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Delivery Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                min: \"0\",\n                value: deliveryDistance,\n                onChange: event => setValue(event, setDeliveryDistance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), Distance.Meters]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-5 col-form-label\",\n              children: \"Amount of Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"number\",\n                min: \"0\",\n                value: amoutOfItems,\n                onChange: event => setValue(event, setAmountOfItems)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-sm-4 col-form-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-7\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"datetime-local\",\n                min: date.toString(),\n                value: orderTime,\n                onChange: event => setValue(event, setOrderTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer text-muted\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: calculatePrice,\n                children: [\"Calculate Delivery Price\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Delivery Price: \", deliveryFee, Currency.Euro]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Calculator, \"Pe3Je8dJT83Yr+XrpnjzBqW1qBM=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Muneer/Wolt/Frontend-Task/calculator/src/Calculator/deliveryFeeCalculator.tsx"],"names":["React","useState","WoltSurcharge","Currency","Distance","isFloat","calculateSurchargeOnCartValue","calculateSurchargeOnDistance","calculateSurchargeOnItems","calculateSurchargeOnRushHours","calculateTotalDeliveryCharges","date","Date","tois","console","log","Calculator","deliveryFee","setdeliveryFee","cartValue","setCartValue","deliveryDistance","setDeliveryDistance","amoutOfItems","setAmountOfItems","orderTime","setOrderTime","FreeDeliveryCartValue","MinumumFreeCartValue","MaximumSurchargeFreeDistanceCovered","MaximumSurchargeFreeItems","SurchargeOnExtraItem","RushHoursDay","RushHoursStartTime","RushHoursEndTime","SurchargeOnRushHours","MaximumDeliveryFee","calculatePrice","e","surchargeOnCartValue","surchargeOnDistance","surchargeOnItems","deliverySum","surchargeOnRushHours","totalDeliveryFee","toFixed","toString","setValue","setState","target","value","event","Euro","Meters"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { WoltSurcharge, Currency, Distance } from \"../Utils/StaticData\";\r\nimport { isFloat } from \"../Utils/Helpers\";\r\n\r\nimport {\r\n  calculateSurchargeOnCartValue,\r\n  calculateSurchargeOnDistance,\r\n  calculateSurchargeOnItems,\r\n  calculateSurchargeOnRushHours,\r\n  calculateTotalDeliveryCharges,\r\n} from \"../BusinessLogic/deliveryFeeCalculator\";\r\n\r\nconst date = new Date().tois;\r\nconsole.log(date);\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [deliveryFee, setdeliveryFee] = useState(\"0\");\r\n  const [cartValue, setCartValue] = useState(0);\r\n  const [deliveryDistance, setDeliveryDistance] = useState(0);\r\n  const [amoutOfItems, setAmountOfItems] = useState(0);\r\n  const [orderTime, setOrderTime] = useState(\"\");\r\n\r\n  const {\r\n    FreeDeliveryCartValue,\r\n    MinumumFreeCartValue,\r\n    MaximumSurchargeFreeDistanceCovered,\r\n    MaximumSurchargeFreeItems,\r\n    SurchargeOnExtraItem,\r\n    RushHoursDay,\r\n    RushHoursStartTime,\r\n    RushHoursEndTime,\r\n    SurchargeOnRushHours,\r\n    MaximumDeliveryFee,\r\n  } = WoltSurcharge;\r\n\r\n  const calculatePrice = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (cartValue >= FreeDeliveryCartValue) {\r\n      setdeliveryFee(\"0\");\r\n      return;\r\n    }\r\n\r\n    //check for cart vlaue\r\n    let surchargeOnCartValue = calculateSurchargeOnCartValue(\r\n      MinumumFreeCartValue,\r\n      cartValue\r\n    );\r\n\r\n    // if(cartValue < 10){\r\n    //     surchargeOnCartValue = 10 - cartValue;\r\n    // };\r\n\r\n    //check for distance\r\n    // var distanceInRounds = deliveryDistance % 500;\r\n    // var baseDistance = deliveryDistance / 500;\r\n    // var surchargeOnDistance = parseInt(baseDistance.toString().split(\".\")[0]);\r\n    // if(distanceInRounds > 0){\r\n    //     surchargeOnDistance = surchargeOnDistance + 1;\r\n    // }\r\n\r\n    let surchargeOnDistance = calculateSurchargeOnDistance(\r\n      MaximumSurchargeFreeDistanceCovered,\r\n      deliveryDistance\r\n    );\r\n\r\n    //check for number of items\r\n    var surchargeOnItems = calculateSurchargeOnItems(\r\n      MaximumSurchargeFreeItems,\r\n      SurchargeOnExtraItem,\r\n      amoutOfItems\r\n    );\r\n\r\n    // if(amoutOfItems > 4){\r\n    //     var surchargebleItems = amoutOfItems - 4;\r\n    //     var surchargePerItem = 0.50;\r\n    //     surchargeOnItems = surchargebleItems * surchargePerItem;\r\n    // }\r\n\r\n    //check for datetime\r\n    // var surchargeOnRushHours = 0;\r\n    // var dateTime = new Date(orderTime);\r\n    // const deliveryDay = dateTime.getUTCDay();\r\n    // const deliveryTime = dateTime.getHours();\r\n\r\n    var deliverySum =\r\n      surchargeOnCartValue + surchargeOnDistance + surchargeOnItems;\r\n\r\n    // if(deliveryDay === 5 && (deliveryTime>= 15 && deliveryTime<= 19))\r\n    // {\r\n    //     totalDeliveryFee = totalDeliveryFee * 1.1;\r\n    //     surchargeOnRushHours = totalDeliveryFee * 1.1;\r\n    // }\r\n\r\n    let surchargeOnRushHours = calculateSurchargeOnRushHours(\r\n      RushHoursDay,\r\n      RushHoursStartTime,\r\n      RushHoursEndTime,\r\n      SurchargeOnRushHours,\r\n      orderTime,\r\n      deliverySum\r\n    );\r\n\r\n    // console.log(\"surchargeOnCartValue\", surchargeOnCartValue);\r\n    // console.log(\"surchargeOnDistance\", surchargeOnDistance);\r\n    // console.log(\"surchargeOnItems\", surchargeOnItems);\r\n    // console.log(\"surchargeOnRushHours\", surchargeOnRushHours);\r\n    // console.log(totalDeliveryFee);\r\n    // if(totalDeliveryFee > 15){\r\n    //     totalDeliveryFee = 15;\r\n    // }\r\n\r\n    //total Delivery Fee\r\n    let totalDeliveryFee = calculateTotalDeliveryCharges(\r\n      MaximumDeliveryFee,\r\n      surchargeOnCartValue,\r\n      surchargeOnDistance,\r\n      surchargeOnItems,\r\n      surchargeOnRushHours\r\n    );\r\n    setdeliveryFee(\r\n      isFloat(totalDeliveryFee)\r\n        ? totalDeliveryFee.toFixed(2)\r\n        : totalDeliveryFee.toString()\r\n    );\r\n  };\r\n\r\n  const setValue = (e: any, setState: any) => {\r\n    setState(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n            <div className='col-sm-4 offset-lg-4 offset-md-4 calborder'>\r\n                <p className='cal-heading'>Delivery Fee Calculator</p>\r\n                <div className='calculator'>\r\n                  <div className='row mb-2'>\r\n                      <label className=\"col-sm-5 col-form-label\">Cart Value</label>\r\n                      <div className=\"col-sm-5\">\r\n                        <input className=\"form-control\"  type=\"number\" step=\"0.1\" min='0' value={cartValue} onChange={(event) => setValue(event, setCartValue)}/>\r\n                      </div>\r\n                      <label className=\"col-sm-2 col-form-label cal-label\">{Currency.Euro}</label>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Delivery Distance</label>\r\n                    <div className=\"col-sm-5\">\r\n                        <input className=\"form-control\"  type=\"number\" min='0' value={deliveryDistance} onChange={(event) => setValue(event, setDeliveryDistance)}/>\r\n                    </div>\r\n                    <label className=\"col-sm-2 col-form-label cal-label\">{Distance.Meters}</label>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Amount of Items</label>\r\n                    <div className=\"col-sm-5\">\r\n                      <input className=\"form-control\" type=\"number\" min='0' value={amoutOfItems} onChange={(event) => setValue(event, setAmountOfItems)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <label className=\"col-sm-5 col-form-label\">Time</label>\r\n                    <div className=\"col-sm-5\">\r\n                      <input className=\"form-control\"  type=\"datetime-local\" value={orderTime} onChange={(event) => setValue(event, setOrderTime)}/>                          \r\n                    </div>\r\n                  </div>\r\n                  <div className='row mb-2'>\r\n                    <button className=\"col-sm-6 offset-sm-4 btn-primary btn-round\"  onClick={calculatePrice}>Calculate Delivery Price </button>\r\n                  </div>\r\n                  <div className='row'> \r\n                    <p>Delivery Price: {deliveryFee}{Currency.Euro}</p>\r\n                  </div>\r\n                </div>\r\n                <p className='cal-bottom'></p>         \r\n            </div>\r\n        </div> */}\r\n      <div className=\"col-sm-4 offset-lg-4\">\r\n        <div className=\"card mt-5\">\r\n          <div className=\"card-header\">Delivery Fee Calculator</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"row mb-2\">\r\n              <label className=\"col-sm-5 col-form-label\">Cart Value</label>\r\n              <div className=\"col-sm-5\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  value={cartValue}\r\n                  onChange={(event) => setValue(event, setCartValue)}\r\n                />\r\n              </div>\r\n              {Currency.Euro}\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <label className=\"col-sm-5 col-form-label\">\r\n                Delivery Distance\r\n              </label>\r\n              <div className=\"col-sm-5\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  value={deliveryDistance}\r\n                  onChange={(event) => setValue(event, setDeliveryDistance)}\r\n                />\r\n              </div>\r\n              {Distance.Meters}\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <label className=\"col-sm-5 col-form-label\">Amount of Items</label>\r\n              <div className=\"col-sm-5\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  value={amoutOfItems}\r\n                  onChange={(event) => setValue(event, setAmountOfItems)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <label className=\"col-sm-4 col-form-label\">Time</label>\r\n              <div className=\"col-sm-7\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"datetime-local\"\r\n                  min={date.toString()}\r\n                  value={orderTime}\r\n                  onChange={(event) => setValue(event, setOrderTime)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button className=\"btn btn-primary\" onClick={calculatePrice}>\r\n                  Calculate Delivery Price{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <p>\r\n                  Delivery Price: {deliveryFee}\r\n                  {Currency.Euro}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}